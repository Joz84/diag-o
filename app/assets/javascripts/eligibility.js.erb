document.addEventListener("DOMContentLoaded", function() {

  var map;
  var eligibility = false;
  var mapEligibility = document.getElementById('map');
  var inputAdress = document.getElementById('pac-input');

  if (mapEligibility) {
    var zoneslist = $('.data-for-js').data('zoneslist');
    var address = $('.data-for-js').data('address');
    var geocoded = $('.data-for-js').data('geocoded');
  }

  function initMap(mapFrame, mapCenter) {
    var map = new google.maps.Map(mapFrame, {
      zoom: 16,
      center: mapCenter
    });
    pinMarker(map, mapCenter);
    initZone(map)
  }

  function pinMarker(mapFrame, mapCenter) {
    var marker = new google.maps.Marker({
      position: mapCenter,
      map: mapFrame,
      icon: "http://res.cloudinary.com/doodlid/image/upload/v1507545075/diago/diago_marker.svg",
    });
  }

  function initAutoComplete() {
    if (housingAddress) {
      var autocomplete = new google.maps.places.Autocomplete(housingAddress, { types: [ 'geocode' ] });
      google.maps.event.addListener(autocomplete, 'place_changed', onPlaceChanged);
      google.maps.event.addDomListener(housingAddress, 'keydown', function(e) {
        if (e.key === "Enter") {
          e.preventDefault(); // Do not submit the form on Enter.
        }
      });
    }
  }

  function initZone(map) {
    var geocoder = new google.maps.Geocoder();
    var bounds = new google.maps.LatLngBounds();

    for (i = 0; i < zoneslist.length; i++) {
      polygon = new google.maps.Polygon({
          path: zoneslist[i][0],
          geodesic: true,
          strokeColor: '8B572A',
          strokeOpacity: 0,
          strokeWeight: 1,
          fillColor: zoneslist[i][1],
          fillOpacity: 0.6
        });
      polygon.setMap(map);
    }
  }

  var markerBeforeAutoComplete = {lat: geocoded[0], lng: geocoded[1]};
  var housingAddress = document.getElementById('pac-input');

  initMap(mapEligibility, markerBeforeAutoComplete);
  initAutoComplete();


  function onPlaceChanged() {
    var place = this.getPlace();
    var components = getAddressComponents(place);
    var lat = place.geometry.location.lat();
    var lng = place.geometry.location.lng()
    var geolocation = {lat: lat, lng: lng };
    var housingAddress = document.getElementById('query_address');
    var housinglat = document.getElementById('query_lat');
    var housinglng = document.getElementById('query_lng');

    housingAddress.blur();
    housingAddress.value = components.address + ', ' + components.zip_code + ' ' + components.city + ', ' + components.country_code;
    housinglat.value = place.geometry.location.lat();
    housinglng.value = place.geometry.location.lng();

    initMap(mapEligibility, geolocation);
    checkForEligibility(place);
  }

  function getAddressComponents(place) {

    if (window.console && typeof console.log === "function") {

    }

    var street_number = null;
    var route = null;
    var zip_code = null;
    var city = null;
    var country_code = null;
    for (var i in place.address_components) {
      var component = place.address_components[i];
      for (var j in component.types) {
        var type = component.types[j];
        if (type === 'street_number') {
          street_number = component.long_name;
        } else if (type === 'route') {
          route = component.long_name;
        } else if (type === 'postal_code') {
          zip_code = component.long_name;
        } else if (type === 'locality') {
          city = component.long_name;
        } else if (type === 'postal_town' && city === null) {
          city = component.long_name;
        } else if (type === 'country') {
          country_code = component.short_name;
        }
      }
    }

    return {
      address: street_number === null ? route : (street_number + ' ' + route),
      zip_code: zip_code,
      city: city,
      country_code: country_code
    };
  }

  function checkForEligibility(place) {
      // marker.setMap(null);

      if (!place.geometry) {
        geocodeAddress(input.value);//Added on 27/09/2016
        window.alert("Autocomplete's returned place contains no geometry");
        return;
      };

      // CHECK FOR ELIGIBILITY
      for (i = 0; i < zoneslist.length; i++) {
        polygon = new google.maps.Polygon({
            path: zoneslist[i][0],
            geodesic: true,
          });
        switch(zoneslist[i][1]) {
            case "#D0021B":
                color_name = "rouge"
                break;
            case "#F5A623":
                color_name = "orange"
                break;
            case "#F8E71C":
                color_name = "jaune"
                break;
            default:
                color_name = "jaune mineur"
        }

        $('#address').html(place["formatted_address"]);
        $('#info').hide();
        var address_for_session = document.getElementById('query_address')
        var color_for_session = document.getElementById('query_color')

        if (google.maps.geometry.poly.containsLocation(place.geometry.location, polygon)){
          $('#zone').html( 'Votre habitation est en zone ' + '<span style="color:' + zoneslist[i][1] + '">' + color_name + '</span>');
          $('#conclusion').html('<span class="calltoaction">Vous êtes élligible, le diagnostic de votre habitation sera prise en charge à 100% par votre mairie.</span>');
          $('#calltoaction').html('<h4 class="calltoaction">Planifiez un rendez-vous avec notre diagnosticien dés maintenant.</h4>');
          eligibility = true;
          address_for_session.value = place["formatted_address"];
          color_for_session.value = color_name;
          // console.log("Color: " + color_name);
          $('#btn-rendez-vous').removeClass("hidden");
        };
      }
      if (eligibility == false){
        color_name = "-"
        $('#zone').html('Votre habitation n\'est pas en zone désignée inondable');
        $('#conclusion').html('<span style="color:red">Vous n\'êtes pas élligible, le diagnostic de votre habitation ne sera pas prise en charge.</span>');
        $('#calltoaction').html('Le rendez-vous avec le diagnosticien sera à votre charge.');
      }
  }

});

//   google.maps.event.addListenerOnce(map, 'tilesloaded', function(evt) {
//     bounds = map.getBounds();
//   });
//   window.onload = loadListener();


// }



