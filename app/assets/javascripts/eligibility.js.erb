var map;
var geocoder;
var marker;
var bounds;
var eligibility = false;

if ($('#map').length) {
window.onload = initMap;
}

var zoneslist = $('.data-for-js').data('zoneslist');
var address = $('.data-for-js').data('address');
var center = {lat: 44.80,  lng:-0.51};

function initMap() {

  map = new google.maps.Map(document.getElementById('map'), {
    center: center,
    zoom: 15,
    scaleControl: true,
    center: center,
    disableDefaultUI: false
  });
  geocoder = new google.maps.Geocoder();
  bounds = new google.maps.LatLngBounds();
  google.maps.event.addListenerOnce(map, 'tilesloaded', function(evt) {
    bounds = map.getBounds();
  });
  marker = new google.maps.Marker({
    position: center
  });

  console.log(address)

  for (i = 0; i < zoneslist.length; i++) {
    polygon = new google.maps.Polygon({
        path: zoneslist[i][0],
        geodesic: true,
        strokeColor: '8B572A',
        strokeOpacity: 0,
        strokeWeight: 1,
        fillColor: zoneslist[i][1],
        fillOpacity: 0.6
      });
    polygon.setMap(map);
  }

  var input = document.getElementById('pac-input');
  var types = document.getElementById('type-selector');
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.addListener('place_changed', function() {
    marker.setMap(null);
    var place = autocomplete.getPlace();
    var newBounds = new google.maps.LatLngBounds(bounds.getSouthWest(), bounds.getNorthEast());
  // removed newBounds = bounds;
    if (!place.geometry) {
      geocodeAddress(input.value);//Added on 27/09/2016
      //window.alert("Autocomplete's returned place contains no geometry");
      return;
    };
    marker.setPosition(place.geometry.location);
    marker.setMap(map);
    map.setCenter(marker.getPosition());
    map.setZoom(17);
    map.panTo(marker.position);

    for (i = 0; i < zoneslist.length; i++) {
      polygon = new google.maps.Polygon({
          path: zoneslist[i][0],
          geodesic: true,
        });
      switch(zoneslist[i][1]) {
          case "#D0021B":
              color_name = "rouge"
              break;
          case "#F5A623":
              color_name = "orange"
              break;
          case "#F8E71C":
              color_name = "jaune"
              break;
          default:
              color_name = "jaune mineur"
      }
      $('#address').html(place["formatted_address"]);

      if (google.maps.geometry.poly.containsLocation(place.geometry.location, polygon)){
        $('#zone').html('Votre habitation est en zone ' + '<span style="color:' + zoneslist[i][1] + '">' + color_name + '</span>');
        $('#conclusion').html('<span style="color:green">Vous êtes élligible, le diagnostic de votre habitation sera prise en charge à 100% par votre mairie.</span>');
        $('#calltoaction').html('Planifiez un rendez-vous avec un diagnosticien dés maintenant.');
        eligibility = true;
      };
    }
    if (eligibility == false){
        console.log(place);
        $('#zone').html('Votre habitation n\'est pas en zone désignée inondable');
        $('#conclusion').html('<span style="color:red">Vous n\'êtes pas élligible, le diagnostic de votre habitation ne sera pas prise en charge.</span>');
        $('#calltoaction').html('Le rendez-vous avec le diagnosticien sera à votre charge.');

    }


  });
}

